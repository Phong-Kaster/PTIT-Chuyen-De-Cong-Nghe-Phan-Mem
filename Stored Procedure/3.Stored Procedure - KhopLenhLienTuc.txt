- Ý nghĩa: stored procedure này là phiên bản hoàn chỉnh được phát triển dựa theo phiên bản của thầy Thư. 
Trong này, chúng ta cần hiểu rõ ràng 2 khái niệm: giao dịch đầu vào (Input) và giao dịch được Cursor lấy ra(Cursor).
Mọi trường dữ liệu của giao dịch đầu vào sẽ Phong được định danh theo cấu trúc: Input + <tên trường dữ liệu>. Ví Dụ: InputMaCoPhieu, InputGiaDat.
Giao dịch được lấy ra từ Cursor thì các trường dữ liệu sẽ giống như trong tên bảng LenhDat. Ví dụ: ID, MaCoPhieu, GiaDat....

- Thuật toán nòng cốt: Thuật tuấn của sp_KhopLenhLienTuc hoạt động theo tiêu chí: ưu tiên về giá trước, nếu giá bằng nhau thì ưu tiên về thời gian
Giả sử, chúng ta gửi một lệnh MUA cổ phiếu, thì Cursor trong thuật toán này sẽ tìm tất cả các lệnh BÁN. Các lệnh bán sẽ được sắp xếp theo GIÁ từ bé đến lớn, thời gian từ mới tới cũ
Ngược lại, chúng ta gửi một lệnh BÁN cổ phiếu, thì Cursor trong thuật toán sẽ tìm tất cả các lệnh MUA. Các lệnh mua sẽ được sắp xếp theo GIÁ từ lớn tới bé, thời gian từ mới tới cũ

- Cú pháp:
CREATE PROC [dbo].[sp_KhopLenhLienTuc]
	 @InputMaCoPhieu NVARCHAR( 10), 
	 @InputNgay NVARCHAR( 10),  
	 @InputLoaiGiaoDich CHAR, 
	 @InputSoLuong INT, 
	 @InputGiaDat FLOAT 
AS
	SET DATEFORMAT DMY
	DECLARE @CursorVariable CURSOR ,
			@ID int, 
			@NgayDat NVARCHAR( 10), 
			@SoLuong INT, 
			@GiaDat FLOAT,  
			@soluongkhop INT, 
			@giakhop FLOAT
			

	DECLARE @IDLenhDat INT,
			@InputSoLuongBanDau INT

	SET @inputSoLuongBanDau = @InputSoLuong -- ghi nhớ số lượng cổ phiếu ban đầu để cuối chương trình so sánh, tìm trạng thái phù hợp
	/*Step 1 - lưu thông tin lệnh đặt vào bảng LỆNH ĐẶT trước*/
	INSERT INTO dbo.LenhDat(MaCoPhieu, NgayDat, LoaiGiaoDich, LoaiLenh, SoLuong, GiaDat, TrangThai)
	VALUES(@InputMaCoPhieu, GETDATE(), @InputLoaiGiaoDich, N'LO', @InputSoLuong, @InputGiaDat, N'Chờ Khớp')

	/*Step 2 - lấy ra các giao dịch tương ứng với lệnh đặt gửi tới*/
	IF (@InputLoaiGiaoDich='B')
		EXEC sp_CursorLoaiGiaoDich  @CursorVariable OUTPUT, @InputMaCoPhieu,@InputNgay, 'M'
	ELSE 
		EXEC sp_CursorLoaiGiaoDich  @CursorVariable OUTPUT, @InputMaCoPhieu,@InputNgay, 'B'
  
	/*Step 3 - vòng lặp khớp lệnh đặt vừa gửi tới với các lệnh đã có sẵn trong cơ sở dữ liệu*/
	FETCH NEXT FROM @CursorVariable  INTO @ID, @NgayDat , @SoLuong , @GiaDat 
	WHILE (@@FETCH_STATUS <> -1 AND @InputSoLuong >0)
	BEGIN
	 IF  (@InputLoaiGiaoDich='B' )-- lenh @input la 'B', các lệnh trong @Cursor sẽ là các lệnh mua
		  IF  (@InputGiaDat <= @GiaDat)
	      BEGIN

			IF (@InputSoLuong >= @SoLuong)
			BEGIN
				SET @soluongkhop = @SoLuong
				SET @giakhop = @GiaDat
				SET @InputSoLuong = @InputSoLuong - @SoLuong

				-- cập nhật dữ liệu tại record mà cursor đang đứng
				UPDATE dbo.LenhDat
				SET SoLuong = 0,
					TrangThai = N'Khớp Hết'
				WHERE CURRENT OF @CursorVariable 

			END

			ELSE -- (@InputSoLuong =< @SoLuong )
			BEGIN
			   SET @soluongkhop = @InputSoLuong
			   SET @giakhop = @GiaDat

			   UPDATE dbo.LenhDat  
			   SET SoLuong = SoLuong - @InputSoLuong,
					TrangThai = N'Khớp Lệnh Một Phần'
			   WHERE CURRENT OF @CursorVariable
			   SET @InputSoLuong = 0

			END

		 -- Cập nhật table LENHKHOP - người A bán cho người B bao nhiêu
		 INSERT INTO dbo.LenhKhop(NgayKhop,SoLuongKhop,GiaKhop,idLenhDat)
		 VALUES (GETDATE(),@soluongkhop,@giakhop, @ID )

		 -- Cập nhật table LENHKHOP - người B mua cho người A bao nhiêu
		 SET @IDLenhDat = (SELECT TOP 1 id FROM LenhDat ORDER BY ID DESC)
		 INSERT INTO dbo.LenhKhop(NgayKhop,SoLuongKhop,GiaKhop,idLenhDat)
		 VALUES (GETDATE(),@soLuongKhop,@giaKhop, @IDLenhDat )

		 END -- end IF (@InputGiaDat <= @GiaDat)
		 ELSE 
			GOTO THOAT

	 ELSE --  (@InputLoaiGiaoDich='M' ) -- lenh @input là 'M', các lệnh trong Cursor sẽ là lệnh bán 
		   IF( @InputGiaDat >= @GiaDat ) -- xét giao dịch 'B' (@Gia Dat ) có giá bán cao hơn @input
		   BEGIN
			  IF( @InputSoLuong >= @SoLuong)
			  BEGIN
				  SET @soluongkhop = @SoLuong
				  SET @giakhop = @GiaDat
				  SET @InputSoLuong = @InputSoLuong - @SoLuong

				  UPDATE dbo.LenhDat
				  SET SoLuong = 0,
					TrangThai = N'Khớp Hết'
				  WHERE CURRENT OF @CursorVariable

			  END

			  ELSE -- (@InputSoLuong < @SoLuong )
			  BEGIN
				 SET @soluongkhop = @InputSoLuong
				 SET @giakhop = @GiaDat
				 

				 UPDATE dbo.LenhDat
				 SET SoLuong = SoLuong - @InputSoLuong,
					TrangThai = N'Khớp Lệnh Một Phần'
				 WHERE CURRENT OF @CursorVariable

				 SET @InputSoLuong = 0

			  END

			  -- Cập nhật table LENHKHOP - người A bán cho người B bao nhiêu
			  INSERT INTO dbo.LenhKhop(NgayKhop,SoLuongKhop,GiaKhop,idLenhDat)
			  VALUES (GETDATE(),@soluongkhop,@giakhop, @ID )

			  -- Cập nhật table LENHKHOP - người B mua cho người A bao nhiêu
			  SET @IDLenhDat = (SELECT TOP 1 id FROM LenhDat ORDER BY ID DESC)
			  INSERT INTO dbo.LenhKhop(NgayKhop,SoLuongKhop,GiaKhop,idLenhDat)
			  VALUES (GETDATE(),@soLuongKhop,@giaKhop, @IDLenhDat )
		   END
		   ELSE
			 GOTO THOAT
	   FETCH NEXT FROM @CursorVariable INTO @ID,  @NgayDat , @SoLuong , @GiaDat -- đọc dòng kế tiếp để xử lý
	END
THOAT:
	
	/*Step 4 - cập nhật lại trạng thái & số cổ phiếu còn lại sau khi đã khớp lệnh ở Step 3*/
	DECLARE @TrangThai nvarchar(255)
	DECLARE @MACP NVARCHAR(7)
	DECLARE @TongSo int


	/*Step 4.1 - tìm ra trạng thái phù hợp của lệnh đặt vừa được thêm vào. Có 3 giá trị: Chờ khớp, Khớp lệnh 1 phần & Khớp hết */
	--Update table LENHDAT nếu số lượng mua bán > 0 và không thay đổi gì sau vòng xử lý phía trên thì nghĩa là không có lệnh nào khớp được
	IF(@InputSoLuong >0 and @InputSoLuong = @InputSoLuongBanDau )
		BEGIN
			SET @TrangThai = N'Chờ Khớp'
		END
	-- nếu số lượng > 0 nhưng không còn như số lượng ban đầu thì tức là nó đã khớp lệnh được 1 phần
    ELSE IF( @InputSoLuong > 0 and  @InputSoLuong != @InputSoLuongBanDau )
		BEGIN
			SET @TrangThai = N'Khớp lệnh một phần'
		END
	-- số lượng == 0 thì tương đương khớp hết
	ELSE
		BEGIN
			SET @TrangThai = N'Khớp hết'
		END
		
	/*Step 4.2 - tiến hành cập nhật nếu số cổ phiếu lúc bắt đầu đã thay đổi so với ban đầu*/
	IF( @TrangThai = N'Khớp lệnh một phần' OR @TrangThai = N'Khớp hết')
		BEGIN 
			SET @IDLenhDat = (SELECT TOP 1 id FROM LenhDat ORDER BY ID DESC)
			UPDATE dbo.LenhDat
			SET TrangThai = @TrangThai, SoLuong = @InputSoLuong
			WHERE id = @IDLenhDat
		END
	
	/*Step 5 - giải phóng Cursor sau khi đã hoàn thành nhiệm vụ*/
	CLOSE @CursorVariable 
	DEALLOCATE @CursorVariable

- Lưu ý: lúc thử những câu lệnh dưới đây thì cần có lấy ngày hôm nay để đặt vào chỗ ngày giờ

- Câu lệnh thử nghiệm nếu mình là người Mua

-- tạo 3 lệnh bán trong cơ sở dữ liệu
exec [sp_KhopLenhLienTuc] 'ACB', '2022-03-18', 'B', 2700, 9000
go

exec [sp_KhopLenhLienTuc] 'ACB', '2022-03-18', 'B', 1000, 10000
go

exec [sp_KhopLenhLienTuc] 'ACB', '2022-03-18', 'B', 1000, 11000
go

-- tạo câu lệnh mua của mình 
exec [sp_KhopLenhLienTuc] 'ACB', '2022-03-18', 'M', 3700, 15000
go

- Câu lệnh thử nghiệm nếu mình là người Bán

-- tạo 3 lệnh bán trong cơ sở dữ liệu
exec [sp_KhopLenhLienTuc] 'ACB', '2022-03-18', 'M', 2700, 9000
go

exec [sp_KhopLenhLienTuc] 'ACB', '2022-03-18', 'M', 1000, 10000
go

exec [sp_KhopLenhLienTuc] 'ACB', '2022-03-18', 'M', 1000, 11000
go

-- tạo câu lệnh mua của mình 
exec [sp_KhopLenhLienTuc] 'ACB', '2022-03-18', 'B', 3700, 5000
go


- Xóa tất cả để thử lệnh lại

delete from dbo.banggiatructuyen
delete from lenhkhop
delete from lenhdat

- Xem kết quả

select * from Lenhdat
select * from lenhkhop
select * from banggiatructuyen
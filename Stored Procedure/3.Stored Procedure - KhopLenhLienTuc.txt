- Ý nghĩa: stored procedure này là phiên bản hoàn chỉnh được phát triển dựa theo phiên bản của thầy Thư. 
Trong này, chúng ta cần hiểu rõ ràng 2 khái niệm: giao dịch đầu vào (Input) và giao dịch được Cursor lấy ra(Cursor).
Mọi trường dữ liệu của giao dịch đầu vào sẽ được định danh theo cấu trúc: Input + <tên trường dữ liệu>. Ví Dụ: InputMaCoPhieu, InputGiaDat.
Giao dịch được lấy ra từ Cursor thì các trường dữ liệu sẽ giống như trong tên bảng LenhDat. Ví dụ: ID, MaCoPhieu, GiaDat....

- Thuật toán nòng cốt: Thuật tuấn của sp_KhopLenhLienTuc hoạt động theo tiêu chí: ưu tiên về giá trước, nếu giá bằng nhau thì ưu tiên về thời gian
Giả sử, chúng ta gửi một lệnh MUA cổ phiếu, thì Cursor trong thuật toán này sẽ tìm tất cả các lệnh BÁN. Các lệnh bán sẽ được sắp xếp theo GIÁ từ bé đến lớn, thời gian từ mới tới cũ
Ngược lại, chúng ta gửi một lệnh BÁN cổ phiếu, thì Cursor trong thuật toán sẽ tìm tất cả các lệnh MUA. Các lệnh mua sẽ được sắp xếp theo GIÁ từ lớn tới bé, thời gian từ mới tới cũ

- Cú pháp:
CREATE PROC [dbo].[sp_KhopLenhLienTuc]
	 @InputMaCoPhieu NVARCHAR( 10), 
	 @InputNgay NVARCHAR( 10),  
	 @InputLoaiGiaoDich CHAR, 
	 @InputSoLuong INT, 
	 @InputGiaDat FLOAT 
AS
	SET DATEFORMAT DMY
	DECLARE @CursorVariable CURSOR ,
			@ID int, 
			@NgayDat NVARCHAR( 10), 
			@SoLuong INT, 
			@GiaDat FLOAT,  
			@soluongkhop INT, 
			@giakhop FLOAT

	IF (@InputLoaiGiaoDich='B')
		EXEC sp_CursorLoaiGiaoDich  @CursorVariable OUTPUT, @InputMaCoPhieu,@InputNgay, 'M'
	ELSE 
		EXEC sp_CursorLoaiGiaoDich  @CursorVariable OUTPUT, @InputMaCoPhieu,@InputNgay, 'B'
  
	FETCH NEXT FROM @CursorVariable  INTO @ID, @NgayDat , @SoLuong , @GiaDat 
	WHILE (@@FETCH_STATUS <> -1 AND @InputSoLuong >0)
	BEGIN
	 IF  (@InputLoaiGiaoDich='B' )-- mình đang muốn Bán
		  IF  (@InputGiaDat <= @GiaDat) -- nên mình sẽ tìm những lệnh mua có giá cao nhất trước
	      BEGIN

			IF (@InputSoLuong > @SoLuong)
			BEGIN
				SET @soluongkhop = @SoLuong
				SET @giakhop = @GiaDat
				SET @InputSoLuong = @InputSoLuong - @SoLuong

				-- cập nhật dữ liệu tại record mà cursor đang đứng
				UPDATE dbo.LenhDat
				SET SoLuong = 0,
					TrangThai = N'Khớp Hết'
				WHERE CURRENT OF @CursorVariable 

			END

			ELSE -- (@InputSoLuong =< @SoLuong )
			BEGIN
			   SET @soluongkhop = @InputSoLuong
			   SET @giakhop = @GiaDat

			   UPDATE dbo.LenhDat  
			   SET SoLuong = SoLuong - @InputSoLuong,
					TrangThai = N'Khớp Lệnh Một Phần'
			   WHERE CURRENT OF @CursorVariable
			   SET @InputSoLuong = 0

			END

		 -- Cập nhật table LENHKHOP
		 INSERT INTO dbo.LenhKhop(NgayKhop,SoLuongKhop,GiaKhop,idLenhDat)
		 VALUES (GETDATE(),@soluongkhop,@giakhop, @ID )

		 END -- end IF (@InputGiaDat <= @GiaDat)
		 ELSE 
			GOTO THOAT

	 ELSE --  (@InputLoaiGiaoDich='M' ) 
		   IF( @InputGiaDat >= @GiaDat )-- mình đang mua vào (@Input) nên mình sẽ tìm những lệnh bán có giá thấp trước
		   BEGIN
			  IF( @InputSoLuong > @SoLuong)
			  BEGIN
				  SET @soluongkhop = @SoLuong
				  SET @giakhop = @GiaDat
				  SET @InputSoLuong = @InputSoLuong - @SoLuong

				  UPDATE dbo.LenhDat
				  SET SoLuong = 0,
					TrangThai = N'Khớp Hết'
				  WHERE CURRENT OF @CursorVariable

			  END

			  ELSE -- (@InputSoLuong < @SoLuong )
			  BEGIN
				 SET @soluongkhop = @InputSoLuong
				 SET @giakhop = @GiaDat
				 

				 UPDATE dbo.LenhDat
				 SET SoLuong = SoLuong - @InputSoLuong,
					TrangThai = N'Khớp Lệnh Một Phần'
				 WHERE CURRENT OF @CursorVariable

				 SET @InputSoLuong = 0

			  END

			  -- Cập nhật table LENHKHOP
			  INSERT INTO dbo.LenhKhop(NgayKhop,SoLuongKhop,GiaKhop,idLenhDat)
			  VALUES (GETDATE(),@soluongkhop,@giakhop, @ID )
		   END
		   ELSE
			 GOTO THOAT
	   FETCH NEXT FROM @CursorVariable INTO @ID,  @NgayDat , @SoLuong , @GiaDat -- đọc dòng kế tiếp để xử lý
	END
THOAT:
	IF(@InputSoLuong >0)-- đã khớp nhưng vẫn còn cổ phiểu | không có lệnh nào để khớp thì ghi lại vào bảng chờ lệnh khác gửi tới để khớp
		BEGIN
			INSERT INTO dbo.LenhDat(MaCoPhieu, NgayDat, LoaiGiaoDich, LoaiLenh, SoLuong, GiaDat, TrangThai)
			VALUES(@InputMaCoPhieu, GETDATE(), @InputLoaiGiaoDich, N'LO', @InputSoLuong, @InputGiaDat, N'Chờ Khớp')
		END

	ELSE
		BEGIN
			-- nếu lệnh của mình (@Input) đã được khớp hết nên ghi lại lệnh này vào bảng lệnh đặt
			INSERT INTO dbo.LenhDat(MaCoPhieu, NgayDat, LoaiGiaoDich, LoaiLenh, SoLuong, GiaDat, TrangThai)
			VALUES(@InputMaCoPhieu, GETDATE(), @InputLoaiGiaoDich, N'LO', @InputSoLuong, @InputGiaDat, N'Khớp hết')
		END
		
	CLOSE @CursorVariable 
	DEALLOCATE @CursorVariable
		
- Lưu ý: lúc thử những câu lệnh dưới đây thì cần có lấy ngày hôm nay để đặt vào chỗ ngày giờ

- Câu lệnh thử nghiệm nếu mình là người Mua

-- tạo 3 lệnh bán trong cơ sở dữ liệu
exec [sp_KhopLenhLienTuc] 'ACB', '2022-03-18', 'B', 2700, 9000
go

exec [sp_KhopLenhLienTuc] 'ACB', '2022-03-18', 'B', 1000, 10000
go

exec [sp_KhopLenhLienTuc] 'ACB', '2022-03-18', 'B', 1000, 11000
go

-- tạo câu lệnh mua của mình 
exec [sp_KhopLenhLienTuc] 'ACB', '2022-03-18', 'M', 3700, 15000
go

- Câu lệnh thử nghiệm nếu mình là người Bán

-- tạo 3 lệnh bán trong cơ sở dữ liệu
exec [sp_KhopLenhLienTuc] 'ACB', '2022-03-18', 'M', 2700, 9000
go

exec [sp_KhopLenhLienTuc] 'ACB', '2022-03-18', 'M', 1000, 10000
go

exec [sp_KhopLenhLienTuc] 'ACB', '2022-03-18', 'M', 1000, 11000
go

-- tạo câu lệnh mua của mình 
exec [sp_KhopLenhLienTuc] 'ACB', '2022-03-18', 'B', 3700, 5000
go


- Xóa tất cả để thử lệnh lại

delete from dbo.banggiatructuyen
delete from lenhkhop
delete from lenhdat

- Xem kết quả

select * from Lenhdat
select * from lenhkhop
select * from banggiatructuyen